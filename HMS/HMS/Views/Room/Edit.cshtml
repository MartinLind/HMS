@model HMS.Models.Room

@{
    Layout = "~/Views/Shared/_Layout_Admin.cshtml";
    ViewBag.Title = "Bearbeiten";
}
<!--Autor: David Bismor -->
<h2>Raum bearbeiten..</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.number, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.number, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.number, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.space, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.space, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.space, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.vacancy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.vacancy, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.vacancy, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.type, new List<SelectListItem>
    {                   new SelectListItem() {Text = "", Value="empty", Selected = true},
                        new SelectListItem() {Text = "OP", Value="OP"},
                        new SelectListItem() {Text = "Untersuchungsraum", Value="Untersuchungsraum"},
                        new SelectListItem() {Text = "Warteraum", Value="Warteraum"},
                        new SelectListItem() {Text = "Behandlunsgraum", Value="Behandlungsraum"},
                        new SelectListItem() {Text = "Patientenzimmer", Value="Patientenzimmer"}
                        
    }, new {@class="form-control"}) 
                @Html.ValidationMessageFor(model => model.type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.timecreate, htmlAttributes: new { @class = "control-label col-md-2" })
         <div class="col-md-10">
                @Html.EditorFor(model => model.timecreate, new { htmlAttributes = new { @class = "form-control", @type="date", @Value = @Model.timecreate.ToString("yyyy-MM-dd"), @readonly = "readonly"  } })
                @Html.ValidationMessageFor(model => model.timecreate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.timemodify, htmlAttributes: new { @class = "control-label col-md-2" })
           <div class="col-md-10">
                @Html.EditorFor(model => model.timemodify, new { htmlAttributes = new { @class = "form-control", @type="date", @Value = @Model.timemodify.ToString("yyyy-MM-dd"), @readonly = "readonly"  } })
                @Html.ValidationMessageFor(model => model.timemodify, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.isactive, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.isactive)
                    @Html.ValidationMessageFor(model => model.isactive, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Speichern" class="btn btn-default"  style="width:90px"/>
                    <input id="BackToList" type="button" value="Abbrechen" class="btn btn-default" style="width:90px"
        onclick="@("window.location.href='" + @Url.Action("Index", "Room") + "'");" />
            </div>
        </div>
    </div>
}
 <!--
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
     -->
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
