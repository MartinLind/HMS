@model HMS.Models.User

@{
    ViewBag.Title = "Create";
}
<!--Autor: David Bismor -->
<h2>Personal anlegen..</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
      
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.username, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.username, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.username, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.rolename, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
              <!--  @Html.EditorFor(model => model.rolename, new { htmlAttributes = new { @class = "form-control" } })-->
                @Html.DropDownListFor(model => model.rolename, new List<SelectListItem>
    {                   new SelectListItem() {Text = "", Value="empty", Selected = true},
                        new SelectListItem() {Text = "Arzt", Value="Arzt"},
                        new SelectListItem() {Text = "Oberarzt", Value="Oberarzt"},
                        new SelectListItem() {Text = "Schwester", Value="Schwester"},
                        new SelectListItem() {Text = "Pfleger", Value="Pfleger"},
                        new SelectListItem() {Text = "Admin", Value="Admin"},
                        new SelectListItem() {Text = "Reinigungspersonal", Value="Reinigungspersonal"}
                        
    }, new {@class="form-control"}) 
                @Html.ValidationMessageFor(model => model.rolename, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.accessright1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.accessright1)
                    @Html.ValidationMessageFor(model => model.accessright1, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.accessright2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.accessright2)
                    @Html.ValidationMessageFor(model => model.accessright2, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.accessright3, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.accessright3)
                    @Html.ValidationMessageFor(model => model.accessright3, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

         <div class="form-group">
            @Html.LabelFor(model => model.accessright4, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.accessright4)
                    @Html.ValidationMessageFor(model => model.accessright4, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

         <div class="form-group">
            @Html.LabelFor(model => model.accessright5, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.accessright5)
                    @Html.ValidationMessageFor(model => model.accessright5, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.prename, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.prename, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.prename, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.surname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.surname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.surname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.gender, new List<SelectListItem>
    {                   new SelectListItem() {Text = "", Value="empty", Selected = true},
                        new SelectListItem() {Text = "männlich", Value="männlich"},
                        new SelectListItem() {Text = "weiblich", Value="weiblich"}
    }, new {@class="form-control"}) 
                @Html.ValidationMessageFor(model => model.gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.street, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.street, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.street, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.city, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.city, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.city, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.zip, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.zip, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.zip, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dateofbirth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dateofbirth, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.dateofbirth, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.timecreate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.timecreate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.timecreate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.timemodify, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.timemodify, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.timemodify, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.isactive, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.isactive)
                    @Html.ValidationMessageFor(model => model.isactive, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Anlegen" class="btn btn-default" style="width:90px"/>
             <input id="BackToIndex" type="button" value="Abbrechen" class="btn btn-default" style="width:90px"
        onclick="@("window.location.href='" + @Url.Action("Index", "User") + "'");" />
            </div>
        </div>
    </div>
}

<div>
 <!--   @Html.ActionLink("Back to List", "Index") -->
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
