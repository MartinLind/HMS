@model HMS.Models.Patient

@{
    ViewBag.Title = "Bearbeiten";
}

<h2>Patienten bearbeiten..</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
     
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.hcID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">        
                @Html.DropDownListFor(model => model.hcID, new List<SelectListItem>
    {                   new SelectListItem() {Text = "", Value="empty", Selected = true},
                        new SelectListItem() {Text = "C16 - Magenkrebs", Value="C16 - Magenkrebs"},
                        new SelectListItem() {Text = "C34 - Lungenkrebs", Value="C34 - Lungenkrebs"},
                        new SelectListItem() {Text = "C18 - Dickdarmkrebs", Value="C18 - Dickdarmkrebs"},
                        new SelectListItem() {Text = "E02 - Schilddrüsenunterfunktion", Value="E02 - Schilddrüsenunterfunktion"},
                        new SelectListItem() {Text = "E15 - Hyperinsulinismus", Value="E15 - Hyperinsulinismus"},
                        new SelectListItem() {Text = "E60 - Zinkmangel", Value="E60 - Zinkmangel"},
                        new SelectListItem() {Text = "F00 - Alzheimer-Krankheit", Value="F00 - Alzheimer-Krankheit"},
                        new SelectListItem() {Text = "F06 - Halluzination", Value="F06 - Halluzination"},
                        new SelectListItem() {Text = "F32 - Depression", Value="F32 - Depression"},
                        new SelectListItem() {Text = "I10.9 - Essentielle Hypertonie", Value="I110.9 - Essenzielle Hypertonie"},
                        new SelectListItem() {Text = "I12.9 - Hypertensive Nierenkrankheit", Value="I12.9 - Hypertensive Nierenkrankheit"},
                        new SelectListItem() {Text = "J02 - Akute Rachenentzündung", Value="J02 - Akute Rachenentzündung"},
                        new SelectListItem() {Text = "J09 - Vogelgrippe", Value="J09 - Vogelgrippe"},
                        new SelectListItem() {Text = "J33 - Polyp der Nasenhöhle", Value="J33 - Polyp der Nasenhöhle"},
                        new SelectListItem() {Text = "J40 - Bronchitis", Value="J40 - Bronchitis"},
                        new SelectListItem() {Text = "M23 - Meniskusriss", Value="M23 - Meniskusriss"},
                        new SelectListItem() {Text = "M50 - Zervikale Bandscheibenschäden", Value="Zervikale Bandscheibenschäden"},
                        new SelectListItem() {Text = "M87 - Knochennekrose", Value="M87 - Knochennekrose"}
                        
    }, new {@class="form-control"}) 
                @Html.ValidationMessageFor(model => model.hcID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.prename, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.prename, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.prename, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.surname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.surname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.surname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                 @Html.DropDownListFor(model => model.gender, new List<SelectListItem>
    {                   new SelectListItem() {Text = "", Value="empty", Selected = true},
                        new SelectListItem() {Text = "männlich", Value="männlich"},
                        new SelectListItem() {Text = "weiblich", Value="weiblich"}
    }, new {@class="form-control"}) 
                @Html.ValidationMessageFor(model => model.gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.street, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.street, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.street, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.city, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.city, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.city, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.zip, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.zip, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.zip, "", new { @class = "text-danger" })
            </div>
        </div>
        <!--Not Editable, but without form control! Maybe need to be checked--> 
        <div class="form-group" >
            @Html.LabelFor(model => model.dateofbirth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dateofbirth, new { htmlAttributes = new { @class = "form-control", type="date", @Value = @Model.dateofbirth.ToString("yyyy-MM-dd"), @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.dateofbirth, "", new { @class = "text-danger" })
              <!--  @Html.DisplayFor(model => model.dateofbirth, new{ htmlAttributes= new {  @class = "form-control" }} ) 
              <!--  @Html.ValidationMessageFor(model => model.dateofbirth, "", new { @class = "text-danger" }) -->
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.timecreate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.timecreate, new { htmlAttributes = new { @class = "form-control", @type="date", @Value = @Model.timecreate.ToString("yyyy-MM-dd"), @readonly = "readonly"  } })
                @Html.ValidationMessageFor(model => model.timecreate, "", new { @class = "text-danger" })

               <!-- style="width: 310px"><span class="form-control"> @Html.DisplayFor(model => model.timecreate, new { htmlAttributes = new { @type="date" } })</span>
                @Html.ValidationMessageFor(model => model.timecreate, "", new { @class = "text-danger" })-->
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.timemodify, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.timemodify, new { htmlAttributes = new { @class = "form-control", @type="date", @Value = @Model.timemodify.ToString("yyyy-MM-dd"), @readonly = "readonly"  } })
                @Html.ValidationMessageFor(model => model.timemodify, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.isactive, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.isactive)
                    @Html.ValidationMessageFor(model => model.isactive, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Speichern" class="btn btn-default" style="width:90px"/>
                    <input id="BackToList" type="button" value="Abbrechen" class="btn btn-default" style="width:90px"
        onclick="@("window.location.href='" + @Url.Action("Index", "Patient") + "'");" />
            </div>
        </div>
    </div>
}
 <!--
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
-->
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
