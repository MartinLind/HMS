//------------------------------------------------------------------------------
// <auto-generated>
//     Der Code wurde von einer Vorlage generiert.
//
//     Manuelle Änderungen an dieser Datei führen möglicherweise zu unerwartetem Verhalten der Anwendung.
//     Manuelle Änderungen an dieser Datei werden überschrieben, wenn der Code neu generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HMS.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.ComponentModel.DataAnnotations.Schema;

    public partial class User : Person
    {
        //Leerer Konstruktor wie immer
        //MW
        public User() { }


        /// <summary>
        /// @Author Yunus Koc, David Bismor
        /// </summary>
        /// <param name="id"></param>
        /// <param name="timecreate"></param>
        /// <param name="timemodify"></param>
        /// <param name="isactive"></param>
        /// <param name="prename"></param>
        /// <param name="surname"></param>
        /// <param name="phone"></param>
        /// <param name="email"></param>
        /// <param name="gender"></param>
        /// <param name="street"></param>
        /// <param name="city"></param>
        /// <param name="zip"></param>
        /// <param name="dateofbirth"></param>
        /// <param name="password"></param>
        /// <param name="rolename"></param>
        /// <param name="accessright1"></param>
        /// <param name="accessright2"></param>
        /// <param name="accessright3"></param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public User(int id, string username, System.DateTime timecreate, System.DateTime timemodify, bool isactive, string prename, string surname, string phone,
            string email, string gender, string street, string city, string zip, System.DateTime dateofbirth, string password, string rolename, bool accessright1, bool accessright2, bool accessright3)
            : base(id, timecreate, timemodify, isactive, prename, surname, phone, email, gender, street, city, zip, dateofbirth)
        {
            this.LocalCase = new HashSet<LocalCase>();
            this.password = password;
            this.rolename = rolename;
            this.accessright1 = accessright1;
            this.accessright2 = accessright2;
            this.accessright3 = accessright3;
            this.accessright4 = accessright4;
            this.accessright5 = accessright5;
            this.username = username;

            Exception rolenameException = new Exception("Ungültige Funktion");

            if (!((gender == "Arzt") || (gender == "Pflegepersonal") || (gender == "Admin") || (gender == "Reinigungspersonal") || (gender == "Therapeut")))
            {
                throw rolenameException;
            }
        }

        public User(String username, String password)
        {
            this.username = username;
            this.password = password;
        }

        [Required(ErrorMessage = "Bitte geben Sie ein Passwort ein.")]
        [Display(Name = "Passwort")]
        public string password { get; set; }
        [Required(ErrorMessage = "Bitte tätigen Sie eine Eingabe.")]
        [Display(Name = "Funktion")]
        [RegularExpression(@"\bArzt\b|\bOberarzt\b|\bPflegepersonal\b|\bAdmin\b|\bReinigungspersonal\b|\bTherapeut\b", ErrorMessage = "Bitte tätigen Sie eine Eingabe! ")]
        public string rolename { get; set; }
        [Display(Name = "Adminrechte")]
        public bool accessright1 { get; set; }
        [Display(Name = "Arztrechte")]
        public bool accessright2 { get; set; }
        [Display(Name = "Pflegerechte")]
        public bool accessright3 { get; set; }
        [Display(Name = "Reinigungskraft")]
        public bool accessright4 { get; set; }
        [Display(Name = "Therapeutrecht")]
        public bool accessright5 { get; set; }

        [Required]
        [Display(Name = "Benutzername")]
        public string username { get; set; }

        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<LocalCase> LocalCase { get; set; }
    }
}
